a = 1
a
clear
a
demo()
b <- 1
1
a = 1
## test
# test
# print x
x
# print x
x
# Assign a variable to 42
x <- 42
# print x
x
# print x
x
6 + 3
# R Basics
# Arithmetic operations
6 + 3
6 - 3
6 / 3
6 * 3
6 ** 3
6 %% 3
# Variables
# Assign a variable to 42
x <- 42
# print x
x
6 ** 3
# print x
x
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
# print x
x
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
clear
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R')
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R')
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R')
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
# print data types
class(my_character)
my_character <- "Hello, world"
my_logical <- FALSE
my_numeric <- 42
# print data types
class(my_character)
class(my_logical)
class(my_numeric)
my_character <- "Hello, world"
my_logical <- FALSE
my_numeric <- 42
# print data types
class(my_character)
class(my_logical)
class(my_numeric)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
class(my_numeric)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R')
source('C:/Users/L.Spencer/Dropbox/Data Science/r-projects/r-basics.R')
3 + 3
6 = 12
6 ==12
6 == 6
clear
x = c(1,2,3,4,5)
y = c(2,3,4,5,6)
print(x + y)
print("hellow rodl")
# Comparison - is poker higher than roulette
print(total_roulette < total_poker)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/vectors.r', echo=TRUE)
poker_wednesday <- poker_vector[3]
print(poker_wednesday)
6 + 6
roulette_vector <- c(-24, -50, 100, -350, 10)
roulette_vector <- c(-24, -50, 100, -350, 10)
names(roulette_vector) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
print(roulette_vector)
matrix(1:6, nrow=2)
matrix(1:6, nrow=2)
matrix(1:9, nrow=3, byrow=TRUE)
new_hope <- c(460.998, 314.4)
empire_strikes <- c(290.475, 247.900)
return_jedi <- c(309.306, 165.8)
box_office <- c(new_hope, empire_strikes, return_jedi)
matrix(box_office)
matrix(box_office, nrows=3)
box_office <- c(new_hope, empire_strikes, return_jedi)
matrix(box_office, nrows=3)
matrix(box_office, nrow=3)
matrix(box_office, nrow=3, byrow=TRUE)
print(star_wars_matrix)
box_office <- c(new_hope, empire_strikes, return_jedi)
star_wars_matrix = matrix(box_office, nrow=3, byrow=TRUE)
print(star_wars_matrix)
# Vectors region and titles, used for naming
region <- c("US", "non-US")
titles <- c("A New Hope", "The Empire Strikes Back", "Return of the Jedi")
rownames(star_wars_matrix) <- titles
colnames(star_wars_matrix) <- region
print(star_wars_matrix)
# Calculating worldwide box office
rowSums(star_wars_matrix)
# Add worldwide figures as a new column
all_wars_matrix <- cbind(star_wars_matrix, all_wars_matrix)
# Add worldwide figures as a new column
all_wars_matrix <- cbind(star_wars_matrix, worldwide_vector)
# Calculating worldwide box office
worldwide_vector <- rowSums(star_wars_matrix)
# Add worldwide figures as a new column
all_wars_matrix <- cbind(star_wars_matrix, worldwide_vector)
print(all_wars_matrix)
print(total_revenue_vector)
total_revenue_vector <- colSums(star_wars_matrix)
print(total_revenue_vector)
# Subsetting, slicing and indexing
all_wars_matrix
# Subsetting, slicing and indexing
all_wars_matrix[1,1]
# Select A New Hope - US Box Office
# Row = 1, Column = 1 (Rows first)
star_wars_matrix[1,1]
# Select Empire Strikes - non US
all_wars_matrix[2,2]
# Select Return of the Jedi - non US
all_wars_matrix[3,2]
star_wars_matrix[1:2,]
star_wars_matrix[1:2,2]
star_wars_matrix[,2]
all_wars_matrix[,2]
all_wars_matrix
all_wars_matrix[,2]
x[1,1:2]
x <- all_wars_matrix[,2]
x[1,1:2]
x[1,1]
x
x[2]
x[,1:2]
x[,1]
x[1:2]
# Select just non-US
non_us_all <- all_wars_matrix[,2]
# Select first two non-US
non_us_all[1:2]
# Mean
mean(non_us_all)
mean(non_us_all[1:2])
print(visitors)
# Estimate visitors by divinding by 5 dollars
visitors <- star_wars_matrix / 5
print(visitors)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/factors.R', echo=TRUE)
temperature_vector <- c("High", "Low", "High","Low", "Medium")
factor_temperature_vector <- factor(temperature_vector, order = TRUE, levels = c("Low", "Medium", "High"))
print(factor_temperature_vector)
# How many males in sex factor?
summary(factor_sex_vector)
# How many males in sex factor?
summary(sex_vector)
# How many males in sex factor?
summary(sex_vector)
summary(factor_sex_vector)
# Comparisons only can be used on ordinal data
speed_vector <- c("slow", "medium", "fast")
temperature_vector <- c("High", "Low", "High","Low", "Medium")
factor_temperature_vector <- factor(temperature_vector, ordered = TRUE, levels = c("Low", "Medium", "High"))
print(factor_temperature_vector)
summary(factor_speed_vector)
factor_speed_vector <- factor(speed_vector, ordered = TRUE, levels = c("low", "medium", "high"))
summary(factor_speed_vector)
factor_speed_vector <- factor(speed_vector, ordered = TRUE, levels = c("slow", "medium", "fast"))
summary(factor_speed_vector)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/factors.R', echo=TRUE)
print(factor_speed_vector)
da2 <- factor_speed_vector[2]
da5 <- factor_speed_vector[5]
da2 < da5
da2 <- factor_speed_vector[2]
da5 <- factor_speed_vector[5]
da2 > da5
print(df)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/dataframes.R', echo=TRUE)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/dataframes.R', echo=TRUE)
str(df)
# Import flat files
mtcars <- read.csv("https://gist.githubusercontent.com/seankross/a412dfbd88b3db70b74b/raw/5f23f993cd87c283ce766e7ac6b329ee7cc2e1d1/mtcars.csv", stringsAsFactors = FALSE)
print(mtcars)
# Preview
print(head(mtcars))
print(tail(mtcars))
# Display the structure of the data
print(str(mtcars))
name <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet",
"Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", "Gas giant")
diameter <- c(0.382, 0.949, 1, 0.532, 11.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
# Create a data frame from the vectors
planets_df <- data.frame(name, type, diameter, rotation, rings)
print(planets_df)
print(str(planets_df))
# Select diameter of Mercury
planets_df['diameter']
# Select diameter of Mercury
planets_df[1,"diameter"]
planets_df[1,3]
# Select all data for Mars (entire fourth row)
planets_df["Mars",]
# Select all data for Mars (entire fourth row)
planets_df[4,]
# Select first 5 values of diameter column
planets_df[1:5,"diameter"]
# Shortcut way
print(planets_df$rings)
# Planets with rings
planets_df[rings,]
# Planets with rings
planets_df[rings_vector,]
# Select first 5 values of diameter column
planets_df[1:5,"diameter"]
# Shortcut way
rings_vector <- planets_df$rings
# Planets with rings
planets_df[rings_vector,]
# Easier subsetting without any index vector
subset(planets_df, subset = rings)
# Subset planets with diameter < 1
subset(planets_df, subset = diameter < 1)
# Use order() to create positions
positions <- order(planets_df$diameter)
# Use positions to sort planets_df
planets_df[positions, ]
my_df <- mtcars[1:10,]
source('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/lists.R', echo=TRUE)
my_list <- list(my_vector, my_matrix, my_df)
print(my_list)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/lists.R', echo=TRUE)
print(my_list)
source('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/lists.R', echo=TRUE)
# Subset second array index, second element (4)
print(my_list$mat[2])
# Subset second array index, second element (4)
print(my_list$mat[1,2])
# Adding an element to a list using c()
my_list_full <- c(my_list, year = 2019)
print(my_list_full)
print(my_list_full)
print(str(my_list_full))
# Graphics
countries <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/mosaicData/CoolingWater.csv")
print(countries)
source('~/.active-rstudio-document', echo=TRUE)
print(countries)
source('~/.active-rstudio-document', echo=TRUE)
plot(countries$male.2020)
hist(countries$male.2020)
source('~/.active-rstudio-document', echo=TRUE)
print(head(population))
population <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/boot/bigcity.csv")
print(head(population))
print(population)
population <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/boot/city.csv")
print(population)
shiny::runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
shiny::runApp('C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app')
setwd("C:/Users/L.Spencer/Dropbox/Data Science/r-data-science/r-shiny-web-app/web-app")
shiny::runApp()
